<?xml version="1.0" encoding="UTF-8" ?> 
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:p="http://www.springframework.org/schema/p" 
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd 
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<context:annotation-config />
	<context:component-scan base-package="kr.co.d2net.task" />
	<!--  
	<bean class="kr.co.d2net.task.QuartzLoadInitialize" init-method="init" />
	-->
    
    <!-- Gateway Execute Job -->
	<bean name="deleteControlDetail" class="org.springframework.scheduling.quartz.JobDetailBean"
		p:jobClass="kr.co.d2net.task.remove.DeleteControlJob">
	</bean>
	<bean name="deleteTempDetail" class="org.springframework.scheduling.quartz.JobDetailBean"
		p:jobClass="kr.co.d2net.task.remove.DeleteTempJob">
	</bean>
	<bean name="deleteHighDetail" class="org.springframework.scheduling.quartz.JobDetailBean"
		p:jobClass="kr.co.d2net.task.remove.DeleteHighJob">
	</bean>
	<bean name="deleteDefaultDetail" class="org.springframework.scheduling.quartz.JobDetailBean"
		p:jobClass="kr.co.d2net.task.remove.DeleteDefaultJob">
	</bean>
	<bean name="weekDiagramRequestDetail" class="org.springframework.scheduling.quartz.JobDetailBean"
		p:jobClass="kr.co.d2net.task.diagram.WeekDiagramRequestJob">
	</bean>
	<bean name="dailyDiagramXmlDetail" class="org.springframework.scheduling.quartz.JobDetailBean"
		p:jobClass="kr.co.d2net.task.diagram.DailyDiagramXmlJob">
	</bean>
	<bean name="dailyDiagramRequestDetail" class="org.springframework.scheduling.quartz.JobDetailBean"
		p:jobClass="kr.co.d2net.task.diagram.DailyDiagramRequestJob">
	</bean>
	<bean name="storageCheckRequestDetail" class="org.springframework.scheduling.quartz.JobDetailBean"
		p:jobClass="kr.co.d2net.task.diagram.StorageCheckControlJob">
	</bean>
	
	<!-- Trigger -->
	<bean id="deleteControlTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
		p:jobDetail-ref="deleteControlDetail"
		p:startDelay="5000"
		p:cronExpression="0 0 1,6,12,20 * * ?" />
	<bean id="deleteTempTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
		p:jobDetail-ref="deleteTempDetail"
		p:startDelay="5000"
		p:cronExpression="0 0 2 * * ?" />
	<bean id="deleteHighTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
		p:jobDetail-ref="deleteHighDetail"
		p:startDelay="5000"
		p:cronExpression="0 0 4 * * ?" />
	<!--  
	<bean id="deleteDefaultTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
		p:jobDetail-ref="deleteDefaultDetail"
		p:startDelay="5000"
		p:cronExpression="0 0/2 * * * ?" />
	-->
	<bean id="deleteDefaultTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
		p:jobDetail-ref="deleteDefaultDetail"
		p:startDelay="5000"
		p:cronExpression="0 0 3,9,14,22 * * ?" />
	<bean id="dailyDiagramRequestTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
		p:jobDetail-ref="dailyDiagramRequestDetail"
		p:startDelay="5000"
		p:cronExpression="0 0/5 * * * ?" />
	<bean id="DailyDiagramXmlTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
		p:jobDetail-ref="dailyDiagramXmlDetail"
		p:startDelay="5000"
		p:cronExpression="0 0/2 * * * ?" />
	<bean id="weekDiagramRequestTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
		p:jobDetail-ref="weekDiagramRequestDetail"
		p:startDelay="5000"
		p:cronExpression="0 0/20 * * * ?" />
	<bean id="storageCheckRequestTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
		p:jobDetail-ref="storageCheckRequestDetail"
		p:startDelay="5000"
		p:cronExpression="0 0/10 * * * ?" />
					
	<!-- Trigger Add -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
		p:waitForJobsToCompleteOnShutdown="true">
		<property name="triggers">
			<list>
				<ref bean="dailyDiagramRequestTrigger" />
				<ref bean="DailyDiagramXmlTrigger" />
				<ref bean="weekDiagramRequestTrigger" />
				<ref bean="deleteControlTrigger" />
				<ref bean="deleteTempTrigger" />
				<ref bean="deleteHighTrigger" />
				<ref bean="deleteDefaultTrigger" />
				<ref bean="storageCheckRequestTrigger" />
			</list>
		</property>
		<property name="applicationContextSchedulerContextKey" value="applicationContext"/>
		<!--  
		<property name="dataSource" ref="dataSource"/>
		<property name="transactionManager" ref="transactionManager"/>
		<property name="applicationContextSchedulerContextKey" value="applicationContext"/>
		<property name="overwriteExistingJobs" value="true"/>
		<property name="jobFactory"> 
			<bean class="org.springframework.scheduling.quartz.SpringBeanJobFactory"/> 
		</property>
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.scheduler.instanceName">DasClusteredScheduler</prop>
				<prop key="org.quartz.scheduler.instanceId">AUTO</prop>
				
				<prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
				<prop key="org.quartz.threadPool.threadCount">2</prop> 
				<prop key="org.quartz.threadPool.threadPriority">4</prop>
				
				<prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
				<prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop> 
				<prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</prop>
				<prop key="org.quartz.jobStore.useProperties">false</prop>
				<prop key="org.quartz.jobStore.dataSource">myDS</prop> 
				<prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop>
				<prop key="org.quartz.jobStore.isClustered">true</prop>
				<prop key="org.quartz.jobStore.clusterCheckinInterval">20000</prop>
			</props>
		</property>
		-->
	</bean>
    
</beans>