<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Quartz">
    
    <select id="findTables" resultClass="string">
	     SELECT tname FROM tab WHERE tname LIKE 'QRTZ%'
    </select>
    
    <select id="findTableIndex" resultClass="string" parameterClass="string">
	     SELECT b.index_name FROM ALL_INDEXES a, ALL_IND_COLUMNS b 
	     WHERE a.index_name = b.index_name AND a.table_name=#tableName#
	     	AND b.index_name LIKE 'IDX%'
    </select>
    
    <statement id="createTables" parameterClass="map">
		CREATE TABLE $tableName$ (
		<isEqual property="tableName" compareValue="QRTZ_JOB_DETAILS">
	    	JOB_NAME VARCHAR2(80) NOT NULL,   
			JOB_GROUP VARCHAR2(80) NOT NULL,   
			DESCRIPTION VARCHAR2(120),   
			JOB_CLASS_NAME VARCHAR2(128) NOT NULL,   
			IS_DURABLE NUMBER(4) NOT NULL,   
			IS_VOLATILE NUMBER(4) NOT NULL,   
			IS_STATEFUL NUMBER(4) NOT NULL,   
			REQUESTS_RECOVERY NUMBER(4) NOT NULL,   
			JOB_DATA BLOB,   
			PRIMARY KEY (JOB_NAME,JOB_GROUP)   
   		</isEqual>
   		<isEqual property="tableName" compareValue="QRTZ_JOB_LISTENERS">
   			JOB_NAME VARCHAR2(80) NOT NULL,   
			JOB_GROUP VARCHAR2(80) NOT NULL,   
			JOB_LISTENER VARCHAR2(80) NOT NULL,   
			PRIMARY KEY (JOB_NAME,JOB_GROUP,JOB_LISTENER),   
			FOREIGN KEY (JOB_NAME,JOB_GROUP) REFERENCES QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP)   
   		</isEqual>
   		<isEqual property="tableName" compareValue="QRTZ_TRIGGERS">
   			TRIGGER_NAME VARCHAR2(80) NOT NULL,   
			TRIGGER_GROUP VARCHAR2(80) NOT NULL,   
			JOB_NAME VARCHAR2(80) NOT NULL,   
			JOB_GROUP VARCHAR2(80) NOT NULL,   
			IS_VOLATILE NUMBER(4) NOT NULL,   
			DESCRIPTION VARCHAR2(120),   
			NEXT_FIRE_TIME NUMBER(16),   
			PREV_FIRE_TIME NUMBER(16),   
			PRIORITY NUMBER(4),   
			TRIGGER_STATE VARCHAR2(16) NOT NULL,   
			TRIGGER_TYPE VARCHAR2(8) NOT NULL,   
			START_TIME NUMBER(16) NOT NULL,   
			END_TIME NUMBER(16),   
			CALENDAR_NAME VARCHAR2(80),   
			MISFIRE_INSTR NUMBER(2),   
			JOB_DATA BLOB,   
			PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),   
			FOREIGN KEY (JOB_NAME,JOB_GROUP) REFERENCES QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP)
   		</isEqual>
   		<isEqual property="tableName" compareValue="QRTZ_SIMPLE_TRIGGERS">
   			TRIGGER_NAME VARCHAR2(80) NOT NULL,   
			TRIGGER_GROUP VARCHAR2(80) NOT NULL,   
			REPEAT_COUNT NUMBER(16) NOT NULL,   
			REPEAT_INTERVAL NUMBER(16) NOT NULL,   
			TIMES_TRIGGERED NUMBER(16) NOT NULL,   
			PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),   
			FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)
   		</isEqual>
   		<isEqual property="tableName" compareValue="QRTZ_CRON_TRIGGERS">
   			TRIGGER_NAME VARCHAR2(80) NOT NULL,   
			TRIGGER_GROUP VARCHAR2(80) NOT NULL,   
			CRON_EXPRESSION VARCHAR2(80) NOT NULL,   
			TIME_ZONE_ID VARCHAR2(80),   
			PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),   
			FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)
   		</isEqual>
   		<isEqual property="tableName" compareValue="QRTZ_BLOB_TRIGGERS">
   			TRIGGER_NAME VARCHAR2(80) NOT NULL,   
			TRIGGER_GROUP VARCHAR2(80) NOT NULL,   
			BLOB_DATA BLOB,   
			PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),   
			FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP) 
   		</isEqual>
   		<isEqual property="tableName" compareValue="QRTZ_TRIGGER_LISTENERS">
   			TRIGGER_NAME VARCHAR2(80) NOT NULL,   
			TRIGGER_GROUP VARCHAR2(80) NOT NULL,   
			TRIGGER_LISTENER VARCHAR2(80) NOT NULL,   
			PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_LISTENER),   
			FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP) 
   		</isEqual>
   		<isEqual property="tableName" compareValue="QRTZ_CALENDARS">
   			CALENDAR_NAME VARCHAR2(80) NOT NULL,   
			CALENDAR BLOB NOT NULL,   
			PRIMARY KEY (CALENDAR_NAME) 
   		</isEqual>
   		<isEqual property="tableName" compareValue="QRTZ_FIRED_TRIGGERS">
   			ENTRY_ID VARCHAR2(95) NOT NULL,   
			TRIGGER_NAME VARCHAR2(80) NOT NULL,   
			TRIGGER_GROUP VARCHAR2(80) NOT NULL,   
			IS_VOLATILE NUMBER(4) NOT NULL,   
			INSTANCE_NAME VARCHAR2(80) NOT NULL,   
			FIRED_TIME NUMBER(16) NOT NULL,   
			PRIORITY NUMBER(4) NOT NULL,   
			STATE VARCHAR2(16) NOT NULL,   
			JOB_NAME VARCHAR2(80),   
			JOB_GROUP VARCHAR2(80),   
			IS_STATEFUL NUMBER(4),   
			REQUESTS_RECOVERY NUMBER(4),   
			PRIMARY KEY (ENTRY_ID) 
   		</isEqual>
   		<isEqual property="tableName" compareValue="QRTZ_PAUSED_TRIGGER_GRPS">
   			TRIGGER_GROUP VARCHAR2(80) NOT NULL,   
			PRIMARY KEY (TRIGGER_GROUP) 
   		</isEqual>
   		<isEqual property="tableName" compareValue="QRTZ_SCHEDULER_STATE">
   			INSTANCE_NAME VARCHAR2(80) NOT NULL,   
			LAST_CHECKIN_TIME NUMBER(16) NOT NULL,   
			CHECKIN_INTERVAL NUMBER(16) NOT NULL,   
			PRIMARY KEY (INSTANCE_NAME) 
   		</isEqual>
   		<isEqual property="tableName" compareValue="QRTZ_LOCKS">
   			LOCK_NAME VARCHAR2(40) NOT NULL,
			PRIMARY KEY (LOCK_NAME) 
   		</isEqual>
		)
    </statement>
    
    <insert id="insertLocks" parameterClass="string">
    	INSERT INTO QRTZ_LOCKS (LOCK_NAME) VALUES (#lockName#)
    </insert>
    
    <statement id="createIndexs" parameterClass="map">
    	CREATE INDEX IDX_$tableName$_$idx$ ON $tableName$ ($columnName$)
    		<!--  
    		<isEqual property="tableName" compareValue="QRTZ_TRIGGERS">
    			CREATE INDEX IDX_NEXT_FIRE_TIME ON $tableName$ (NEXT_FIRE_TIME);
    			CREATE INDEX IDX_TRIGGER_STATE ON $tableName$ (TRIGGER_STATE);
    			CREATE INDEX IDX_NEXT_FIRE_TIME_TRIGGER_STATE ON $tableName$ (NEXT_FIRE_TIME,TRIGGER_STATE);
    			CREATE INDEX IDX_IS_VOLATILE ON $tableName$ (IS_VOLATILE)
    		</isEqual>
    		<isEqual property="tableName" compareValue="QRTZ_FIRED_TRIGGERS">
    			CREATE INDEX IDX_F_TRIGGER_NAME ON $tableName$ (TRIGGER_NAME)
    			CREATE INDEX IDX_F_TRIGGER_GROUP ON $tableName$ (TRIGGER_GROUP)
    			CREATE INDEX IDX_F_TRIGGER_NAME_TRIGGER_GROUP ON $tableName$ (TRIGGER_NAME,TRIGGER_GROUP)
    			CREATE INDEX IDX_F_IS_VOLATILE ON $tableName$ (IS_VOLATILE)
    			CREATE INDEX IDX_F_INSTANCE_NAME ON $tableName$ (INSTANCE_NAME)
    			CREATE INDEX IDX_F_JOB_NAME ON $tableName$ (JOB_NAME)
    			CREATE INDEX IDX_F_JOB_GROUP ON $tableName$ (JOB_GROUP)
    			CREATE INDEX IDX_F_IS_STATEFUL ON $tableName$ (IS_STATEFUL)
    			CREATE INDEX IDX_F_REQUESTS_RECOVERY ON $tableName$ (REQUESTS_RECOVERY)
    		</isEqual>
    		-->
    </statement>
    
    <delete id="tableInitializ" parameterClass="string">
		DELETE FROM $tableName$
    </delete>
    
 </sqlMap>